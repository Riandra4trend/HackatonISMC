generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid()) @db.Uuid
  email    String @unique @db.VarChar(256)
  username String @unique @db.VarChar(256)
  password String @db.VarChar(256)
  role     Role   @default(OPERATIONAL)
}

enum Role {
  OPERATIONAL
  MANAGER
}

// model Loader {
//   id           Int  @id @default(autoincrement()) @db.Integer
//   name         String @default("-")
//   productivity Float?  @default(0) @db.Real
//   assign       String? @default("-") @db.VarChar(256)
//   workingHours Int?    @default(0) @db.Integer
//   operator     String? @default("-") @db.VarChar(256)
//   isReady      Boolean @default(true)
//   fleet        Fleet? @relation(fields: [idFleet],references: [id])
//   idFleet      Int? @db.Integer
// }

model Hauler {
  id           Int    @id @default(autoincrement()) @db.Integer
  name         String @default("-") @db.VarChar(256) 
  assign       String? @default("-") @db.VarChar(256)
  distance     Int?    @default(0) @db.Integer
  operator     String? @default("-") @db.VarChar(256)
  isReady      Boolean @default(true)
  fleet        Fleet?  @relation(fields: [idFleet], references: [id])
  idFleet      Int? @db.Integer
}

model Prodty {
  id      Int     @id @default(autoincrement()) @db.Integer
  prodty  Float @db.Real
  fleet   Fleet?  @relation(fields: [fleetId], references: [id])
  fleetId Int?   @db.Integer 
  longTime Int   @default(0) @db.Integer
  Date     DateTime @db.Timestamp    
}

model Fleet {  
  id            Int        @id @default(autoincrement()) @db.Integer
  name          String          @db.VarChar(256)
  prodtyLoader  Float?          @db.Real
  rate          Float?          @db.Real
  assign       String? @default("-") @db.VarChar(256)
  workingHours Int?    @default(0) @db.Integer
  operator     String? @default("-") @db.VarChar(256)
  isReady      Boolean @default(true)
  haulers       Hauler[]
  prodtys       Prodty[]
  FleetProblems FleetProblems[]
  emisiKarbon   EmissiKarbon[] 
  matchVectors  matchVector[]     
}

model matchVector {
  id        Int      @id @default(autoincrement()) @db.Integer
  fleetId   Int?     @db.Integer 
  fleet     Fleet?   @relation(fields: [fleetId], references: [id])
  MF    Float   @db.Real
  createdAt DateTime  @db.Timestamp
}
model EmissiKarbon {
  id        Int      @id @default(autoincrement()) @db.Integer
  fleetId   Int?     @db.Integer 
  fleet     Fleet?   @relation(fields: [fleetId], references: [id])
  emisi     Float    @db.Real
  createdAt DateTime @default(now()) @db.Timestamp
}

model FleetProblems {
  id        Int      @id @default(autoincrement()) @db.Integer
  name      String   @db.VarChar(256)
  fleetId   Int?     @db.Integer 
  fleet     Fleet?   @relation(fields: [fleetId], references: [id])
  longTime  Int      @default(0) @db.Integer
  detail    String   @default("-") @db.VarChar(256)
  createdAt DateTime @default(now()) @db.Timestamp
}

model Configuration {
  id             Int     @id @default(autoincrement()) @db.Integer
  jumlahFront    Int    @db.Integer
  targetProfit   Float  @db.Real
  oocLoader      Float  @db.Real
  oocHauler      Float  @db.Real
  rate           Float  @db.Real
  ohda           Float  @db.Real
  fuelPrice      Float  @db.Real
  batasEmissi    Float  @db.Real
  targetProduksi Float  @db.Real
  rfuLoader      Float  @db.Real
  rfuHauler      Float  @db.Real
  createdAt      DateTime @default(now()) @db.Timestamp
}